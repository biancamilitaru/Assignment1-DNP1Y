@page "/Adults"
@using Models
@using System.Text.Json
@inject FileContext FileContext

<h3>Adults</h3>

<p>
    Filter adults by name: <input type="text" @oninput="@((arg) => Filter(arg))" style="width: 100px"/>
</p>

@if (adultsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
} else if (!adultsToShow.Any())
{
    <p>
        <em>No adults item exist. Please add some</em>
    </p>
}
else
{
    <table class = "table">
        <thead>
        <tr>
            <th>Id</th>
            <th>First name</th>
            <th>Last name</th>
            <th>Job title</th>
            <th>Hair color</th>
            <th>Eye color</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
        </tr>
        </thead>
        <tbody>
        @foreach(Adult item in adultsToShow)
        {
        <tr>
            <td>@item.Id</td>
            <td>@item.FirstName</td>
            <td>@item.LastName</td>
            <td>@(item.JobTitle == null? "unemployed" : item.JobTitle.JobTitle )</td>
            <td>@item.HairColor</td>
            <td>@item.EyeColor</td>
            <td>@item.Age</td>
            <td>@item.Weight</td>
            <td>@item.Height</td>
            <td>@item.Sex</td>
        </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Adult> allAdults;
    private IList<Adult> adultsToShow;

    protected override async Task OnInitializedAsync()
    {
        allAdults = FileContext.Adults;
        adultsToShow = allAdults;
    }

    private void Filter(ChangeEventArgs changeEventArgs)
    {
        string filterByName = changeEventArgs.Value.ToString();
        if (filterByName != "")
        {
            adultsToShow = allAdults.Where(t => t.FirstName.ToLower().StartsWith(filterByName.ToLower()) 
                                                || t.LastName.ToLower().StartsWith(filterByName.ToLower())).ToList();
        }
        else
        {
            adultsToShow = allAdults;
        }
    }
}